<!DOCTYPE html>
<html lang="en" data-theme="dark">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<title>@ViewData["Title"] - @ViewData["ServerName"]</title>
	<meta name="title" content="@ViewData["ServerName"]" />
	<meta name="description" content="An open-source reimplementation & emulation of the backend of MQ, written from scratch without including intellectual property from the original game." />
	<meta name="keywords" content="@ViewData["ServerName"]" />
	<meta name="robots" content="noindex" />
	<meta name="language" content="English" />
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" />
	<link href="/_content/Web.Razor/style.css" rel="stylesheet" />
	@await RenderSectionAsync("Stylesheets", false)
	<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
	<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
	@await RenderSectionAsync("Scripts", false)
	<script>
		$(function () {
			if (!getCookie("disclaimerAccepted")) {
				$('#disclaimerModal').modal('show');
			}
			$('#agreeButton').on('click', function () { setCookie("disclaimerAccepted", "true", 365); $('#disclaimerModal').modal('hide'); });
			$('#returnButton').on('click', function () { window.history.back(); });
		});
		function setCookie(name, value, days) {
			var expires = ""; if (days) { var d = new Date(); d.setTime(d.getTime() + (days * 86400000)); expires = "; expires=" + d.toUTCString(); }
			document.cookie = name + "=" + (value || "") + expires + "; path=/";
		}
		function getCookie(name) {
			var nameEQ = name + "="; var ca = document.cookie.split(';');
			for (var i = 0; i < ca.length; i++) { var c = ca[i]; while (c.charAt(0) === ' ') c = c.substring(1); if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length); }
			return null;
		}
	</script>
</head>
<body class="modern-shell d-flex flex-column min-vh-100">
	<a href="#main" class="visually-hidden focusable">Skip to content</a>
	<header class="mq-container">
		<nav class="navbar navbar-expand-lg navbar-dark nav-modern" role="navigation" aria-label="Primary">
			<div class="mq-container px-0">
				@{ var path = Context?.Request?.Path.Value?.ToLowerInvariant() ?? string.Empty; }
				<div class="d-flex align-items-center w-100" style="gap:14px;">
					<a class="navbar-brand mb-0" href="/" aria-label="@ViewData["ServerName"] home">
					    <img src="/_content/Web.Razor/logo.png" alt="Site Logo" class="brand-logo" />
						<span class="sr-only">@ViewData["ServerName"]</span>
					</a>
					@await Html.PartialAsync("_NavMenu")
					<div class="nav-actions d-flex align-items-center" style="gap:10px;">
						<button id="themeToggle" class="theme-toggle" aria-label="Toggle theme" title="Toggle theme">
							<svg id="themeToggleIcon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3a1 1 0 0 1 1 1 7 7 0 0 0 7 7 1 1 0 0 1 0 2 7 7 0 0 0-7 7 1 1 0 0 1-2 0 7 7 0 0 0-7-7 1 1 0 0 1 0-2 7 7 0 0 0 7-7 1 1 0 0 1 1-1Z" /></svg>
						</button>
						<button class="navbar-toggler d-lg-none" type="button" data-toggle="collapse" data-target="#primaryNav" aria-controls="primaryNav" aria-expanded="false" aria-label="Toggle navigation">
							<span class="navbar-toggler-icon"></span>
						</button>
					</div>
				</div>
			</div>
		</nav>
	</header>
	<main id="main" class="flex-fill" role="main">
		@RenderBody()
	</main>
	<footer class="footer-modern mt-5" role="contentinfo">
		<div class="mq-container">
			<div class="footer-links">
				<a href="/en/news">News</a>
				<a href="/en/privacy-policy">Privacy Policy</a>
				<a href="/">&copy; @DateTime.Now.Year @ViewData["ServerName"]</a>
				<a href="/en/terms-of-use">Terms of Use</a>
				<a href="/en/report-a-bug">Help</a>
			</div>
		</div>
	</footer>
	<div class="toast-host" id="toastHost" aria-live="polite" aria-atomic="true"></div>
	<div class="modal fade" id="disclaimerModal" tabindex="-1" role="dialog" aria-labelledby="disclaimerModalLabel" aria-hidden="true">
		<div class="modal-dialog" role="document">
				<div class="modal-content panel-glass confirm-modal card-gradient-border">
					<div class="modal-header">
					<h2 class="modal-title t-display h-tight" id="disclaimerModalLabel" style="font-size:clamp(1.6rem,3.2vw,2.25rem);">Disclaimer</h2>
				</div>
				<div class="modal-body">
					<p>
						This project is a fan-made remake. We are not affiliated, associated, authorized, endorsed by, or in any way officially connected with the original developers or publishers, including any of its subsidiaries or affiliates. All trademarks, service marks, and company names are the property of their respective owners.<br /><br />
						This remake is created purely for entertainment purposes and to celebrate the original game. We do not intend to infringe on any copyrights or trademarks. If you are the copyright holder and believe this project violates your rights, please contact us, and we will address your concerns promptly.<br /><br />
						By continuing, you acknowledge that this project is unofficial and that the original developers are not responsible for any content or issues that may arise from this remake.
					</p>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn-modern btn-outline-jungle btn-pad-sm" id="returnButton">Return</button>
					<button type="button" class="btn-modern btn-accent btn-pad-sm fx-pop" id="agreeButton">Agree</button>
				</div>
			</div>
		</div>
	</div>
</body>
<script>
(function(){
	const root = document.documentElement; const btn = document.getElementById('themeToggle'); const icon = document.getElementById('themeToggleIcon');
	const saved = localStorage.getItem('mq-theme'); if(saved){ root.setAttribute('data-theme', saved); }
	function setIcon(){ if(!icon) return; if(root.getAttribute('data-theme')==='light'){ icon.innerHTML='<circle cx="12" cy="12" r="5" />'; } else { icon.innerHTML='<path d="M12 3a1 1 0 0 1 1 1 7 7 0 0 0 7 7 1 1 0 0 1 0 2 7 7 0 0 0-7 7 1 1 0 0 1-2 0 7 7 0 0 0-7-7 1 1 0 0 1 0-2 7 7 0 0 0 7-7 1 1 0 0 1 1-1Z" />'; } }
	icon && setIcon();
	btn && btn.addEventListener('click',()=>{ const mode = root.getAttribute('data-theme')==='light'?'dark':'light'; root.setAttribute('data-theme', mode); localStorage.setItem('mq-theme', mode); setIcon(); showToast('Theme switched to '+mode.charAt(0).toUpperCase()+mode.slice(1), 'success'); });
})();

	document.addEventListener('click',function(e){
		const item = e.target.closest('.admin-dropdown .dropdown-item');
		if(item){
			const menu = item.closest('.admin-dropdown');
			const parent = menu && menu.parentElement;
			if(parent && parent.classList.contains('show')){ parent.classList.remove('show'); }
			menu.classList.remove('show');
			const toggle = document.getElementById('adminDropdown');
			if(toggle){ toggle.setAttribute('aria-expanded','false'); }
		}
	});

const revealEls=[...document.querySelectorAll('[data-reveal], .reveal')];
if('IntersectionObserver' in window){
	const io=new IntersectionObserver((entries)=>{ entries.forEach(e=>{ if(e.isIntersecting || e.intersectionRatio>0){ e.target.classList.add('reveal-active'); io.unobserve(e.target); } }); }, {threshold:0.05, rootMargin:'0px 0px -5% 0px'});
	revealEls.forEach(el=>io.observe(el));
	setTimeout(()=>{
		revealEls.forEach(el=>{ if(!el.classList.contains('reveal-active')){ const r=el.getBoundingClientRect(); if(r.top < window.innerHeight && r.bottom > 0){ el.classList.add('reveal-active'); } } });
	},600);
} else { revealEls.forEach(el=>el.classList.add('reveal-active')); }

function showToast(message,type='info',timeout=4500){
	const host=document.getElementById('toastHost'); if(!host) return; const el=document.createElement('div'); el.className='toast toast-'+type+' reveal-active';
	el.innerHTML='<div style="flex:1;">'+message+'</div><button class="toast-close" aria-label="Close">&times;</button>';
	host.appendChild(el); const closer=el.querySelector('.toast-close'); let to=setTimeout(()=>dismiss(), timeout);
	function dismiss(){ if(!el.parentNode) return; el.style.opacity='0'; el.style.transform='translateY(-6px)'; setTimeout(()=>el.remove(), 320); }
	closer.addEventListener('click',()=>{ clearTimeout(to); dismiss(); });
}
window.showToast=showToast;

document.addEventListener('DOMContentLoaded',()=>{
	const nodes=[...document.querySelectorAll('[data-reveal]')];
	nodes.forEach((el,i)=>{ el.style.transitionDelay = (Math.min(i,12)*45)+'ms'; });
});

(()=>{ const host=document.getElementById('toastHost'); if(host){ host.setAttribute('role','status'); host.setAttribute('aria-live','polite'); host.setAttribute('aria-relevant','additions'); }})();

window.createPanel=(cfg={})=>{ const d=document.createElement('div'); d.className='panel-glass card-gradient-border'; if(cfg.classes) d.classList.add(cfg.classes); if(cfg.style) d.setAttribute('style',cfg.style); if(cfg.title||cfg.description){ const h=document.createElement('div'); h.style.marginBottom='1rem'; let inner=''; if(cfg.kicker) inner+=`<div class="t-sub" style="margin-bottom:.3rem;">${cfg.kicker}</div>`; if(cfg.title) inner+=`<h2 class="t-display" style="font-size:1.6rem;margin:0;">${cfg.title}</h2>`; if(cfg.description) inner+=`<p class="t-lead lead-wide" style="font-size:.8rem;margin:.35rem 0 0;">${cfg.description}</p>`; h.innerHTML=inner; d.appendChild(h);} if(cfg.html){ const body=document.createElement('div'); body.innerHTML=cfg.html; d.appendChild(body);} return d; };
</script>
</html>